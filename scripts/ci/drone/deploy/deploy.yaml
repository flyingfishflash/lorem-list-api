---
- name: Deploy Lorem-List-Api via podman
  hosts: all
  remote_user: container-runner
  vars:
    dev_published_ports_postgresql:
      - "53172:5432"
    dev_published_ports_api:
      - "53171:8282"
    prd_published_ports_postgresql:
      - "53162:5432"
    prd_published_ports_api:
      - "53161:8282"

    # https://docs.podman.io/en/latest/markdown/podman-systemd.unit.5.html

  tasks:
    - name: Include variables file
      ansible.builtin.include_vars:
        file: variables.yaml

    - name: Ensure region is defined and either 'dev' or 'prd'
      ansible.builtin.fail:
        msg: deployment region is not defined or is not set to 'dev' or 'prd'
      when:
        - region is not defined
        - region != "dev"
        - region != "prd"

    - name: Ensure tag is defined and not empty
      ansible.builtin.fail:
        msg: tag is not defined or empty
      when:
        - (tag is not defined) or (tag | length == 0)

    - name: Ensure registry_url is defined and not empty
      ansible.builtin.fail:
        msg: registry_url is not defined or empty
      when:
        - (registry_url is not defined) or (registry_url | length == 0)

    - name: Define region specific variables - dev
      ansible.builtin.set_fact:
        published_ports_postgresql: "{{ dev_published_ports_postgresql }}"
        published_ports_api: "{{ dev_published_ports_api }}"
        region_configured: true
      when:
        - region == "dev"
        - (published_ports_postgresql is not defined) and (published_ports_api is not defined)
        - (dev_published_ports_postgresql is defined) and (dev_published_ports_postgresql | length > 0)
        - (dev_published_ports_api is defined) and (dev_published_ports_api | length > 0)

    - name: Define region specific variables - prd
      ansible.builtin.set_fact:
        published_ports_postgresql: "{{ prd_published_ports_postgresql }}"
        published_ports_api: "{{ prd_published_ports_api }}"
        region_configured: true
      when:
        - region_configured is not defined
        - region == "prd"
        - (published_ports_postgresql is not defined) and (published_ports_api is not defined)
        - (prd_published_ports_postgresql is defined) and (prd_published_ports_postgresql | length > 0)
        - (prd_published_ports_api is defined) and (prd_published_ports_api | length > 0)

    - name: Ensure published_ports_postgresql is defined and not empty
      ansible.builtin.fail:
        msg: published_ports_postgresql is not defined or empty
      when:
        - (published_ports_postgresql is not defined) or (published_ports_postgresql | length == 0)

    - name: Ensure published_ports_api is defined and not empty
      ansible.builtin.fail:
        msg: published_ports_api is not defined or empty
      when:
        - (published_ports_api is not defined) or (published_ports_api | length == 0)

    - name: Stop Lorem-List-Api container services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        scope: user
      register: result_systemd_stop
      failed_when: "result_systemd_stop is failed and 'Could not find the requested service' not in result_systemd_stop.msg"
      loop:
        - lorem-list-api-{{ region }}
        - lorem-list-api-postgresql-{{ region }}

    - name: Remove Lorem-List-Api container quadlets
      ansible.builtin.file:
        name: ~/.config/containers/systemd/{{ item }}/{{ item }}.container
        state: absent
      loop:
        - lorem-list-api-{{ region }}
        - lorem-list-api-postgresql-{{ region }}

    - name: Remove Lorem-List-Api network quadlets
      ansible.builtin.file:
        name: ~/.config/containers/systemd/lorem-list-api-{{ region }}/lorem-list-api-{{ region }}.network
        state: absent

    - name: Push network quadlet lorem-list-api-{{ region }}
      ansible.builtin.copy:
        content: "[Network]"
        dest: ~/.config/containers/systemd/lorem-list-api-{{ region }}/lorem-list-api-{{ region }}.network
        mode: "0644"
        force: false

    - name: Define quadlet lorem-list-api-postgresql-{{ region }}
      ansible.builtin.set_fact:
        quadlet_lorem_list_api_postgresql:
          service_name: lorem-list-api-postgresql-{{ region }}
          file_name: lorem-list-api-postgresql-{{ region }}.container
          unit_description: lorem-list-api - Database
          unit_start_limit_interval_sec: 150
          unit_start_limit_burst: 5
          container_environment:
            - POSTGRES_USER: lorem-list-api
            - POSTGRES_PASSWORD: lorem-list-api
            - POSTGRES_DB: lorem-list
          container_image: docker.io/postgres:16-alpine
          container_log_driver: journald
          container_container_name: lorem-list-api-postgresql-{{ region }}
          container_network: lorem-list-api-{{ region }}.network
          container_podman_args:
            - '--log-opt "tag=podman/lorem-list-api-postgresql-{{ region }}"'
          container_publish_port: "{{ published_ports_postgresql }}"
          service_restart: on-failure
          service_restart_sec: 30
          install_wanted_by: default.target

    - name: Define quadlet lorem-list-api-{{ region }}
      ansible.builtin.set_fact:
        quadlet_lorem_list_api:
          service_name: lorem-list-api-{{ region }}
          file_name: lorem-list-api-{{ region }}.container
          unit_after: lorem-list-api-{{ region }}.service
          unit_description: "lorem-list-api [{{ region }}]"
          unit_requires: lorem-list-api-postgresql-{{ region }}.service
          unit_start_limit_interval_sec: 175
          unit_start_limit_burst: 5
          container_environment:
            - JDK_JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom -Duser.timezone="UTC"
            - SPRING_PROFILES_ACTIVE: postgresql
            - SPRING_JPA_SHOW_SQL: false
            - SPRING_DATASOURCE_URL: jdbc:postgresql://lorem-list-api-postgresql-{{ region }}:5432/lorem-list
            - SPRING_DATASOURCE_USERNAME: lorem-list-api
            - SPRING_DATASOURCE_PASSWORD: lorem-list-api
            - SPRING_DATASOURCE_PLATFORM: POSTGRESQL
          container_image: "{{ registry_url }}/lorem-list-api:{{ tag }}"
          container_log_driver: journald
          container_container_name: lorem-list-api-{{ region }}
          container_network: lorem-list-api-{{ region }}.network
          container_podman_args:
            - '--log-opt "tag=podman/lorem-list-api-{{ region }}"'
          container_publish_port: "{{ published_ports_api }}"
          service_restart: on-failure
          service_restart_sec: 35
          install_wanted_by: default.target

    - name: Define quadlet
      ansible.builtin.set_fact:
        quadlet: "{{ quadlet_lorem_list_api_postgresql }}"

    - name: Push container quadlet
      ansible.builtin.template:
        src: quadlets/quadlet.container.j2
        dest: ~/.config/containers/systemd/lorem-list-api-{{ region }}/{{ quadlet.file_name }}
        mode: "0644"

    - name: Define quadlet
      ansible.builtin.set_fact:
        quadlet: "{{ quadlet_lorem_list_api }}"

    - name: Push container quadlet
      ansible.builtin.template:
        src: quadlets/quadlet.container.j2
        dest: ~/.config/containers/systemd/lorem-list-api-{{ region }}/{{ quadlet.file_name }}
        mode: "0644"

    - name: Re-read systemd configuration
      ansible.builtin.systemd:
        daemon_reload: true
        scope: user

    - name: Start lorem-list-api-postgresql-{{ region }}
      ansible.builtin.systemd:
        name: lorem-list-api-postgresql-{{ region }}
        state: started
        scope: user

    - name: Pull image lorem-list-api:{{ tag }}
      containers.podman.podman_image:
        name: registry.flyingfishflash.net/lorem-list/lorem-list-api
        force: true
        tag: "{{ tag }}"

    - name: Start lorem-list-api-{{ region }}
      ansible.builtin.systemd:
        name: lorem-list-api-{{ region }}
        state: started
        scope: user
