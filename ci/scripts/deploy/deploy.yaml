---
- name: Deploy lorem-list-api via podman
  hosts: all
  remote_user: container-runner
  vars:
    deploy_postgresql_container: false

    # to keep these out of the repository they could be definied as drone repository secrets
    # and written to variables.yaml

    # for connecting to an existing database
    dev_datasource_connection_url: jdbc:postgresql://proxy.flyingfishflash.net:53577/lorem-list
    prd_datasource_connection_url: jdbc:postgresql://proxy.flyingfishflash.net:53571/lorem-list

    # for creating a postgresql container
    dev_published_ports_postgresql:
      - "53172:5432"
    prd_published_ports_postgresql:
      - "53162:5432"

    # published api ports
    dev_published_ports_api:
      - "53171:8282"
    prd_published_ports_api:
      - "53161:8282"

  # https://docs.podman.io/en/latest/markdown/podman-systemd.unit.5.html

  tasks:
    - name: Include variables file
      ansible.builtin.include_vars:
        file: variables.yaml

    - name: Ensure region is defined and either 'dev' or 'prd'
      ansible.builtin.fail:
        msg: deployment region is not defined or is not set to 'dev' or 'prd'
      when:
        - region is not defined
        - region != "dev"
        - region != "prd"

    - name: Ensure tag is defined and not empty
      ansible.builtin.fail:
        msg: tag is not defined or empty
      when:
        - (tag is not defined)  or (tag == None) or (tag | length == 0)

    - name: Ensure registry_url is defined and not empty
      ansible.builtin.fail:
        msg: registry_url is not defined or empty
      when:
        - (registry_url is not defined) or (registry_url == None) or (registry_url | length == 0)

    - name: Stop lorem-list-api container services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
        scope: user
      register: result_systemd_stop
      failed_when: "result_systemd_stop is failed and 'Could not find the requested service' not in result_systemd_stop.msg"
      loop:
        - lorem-list-api-{{ region }}
        - lorem-list-api-postgresql-{{ region }}

    - name: Stop lorem-list-api-{{ region }}-network service
      ansible.builtin.systemd:
        name: lorem-list-api-{{ region }}-network
        state: stopped
        scope: user

    # -----------------------------------------
    # remove existing quadlets (if any)
    # -----------------------------------------

    - name: Remove lorem-list-api container quadlets
      ansible.builtin.file:
        name: ~/.config/containers/systemd/lorem-list-api-{{ region }}/{{ item }}.container
        state: absent
      loop:
        - lorem-list-api-{{ region }}
        - lorem-list-api-postgresql-{{ region }}

    - name: Remove lorem-list-api network quadlets
      ansible.builtin.file:
        name: ~/.config/containers/systemd/lorem-list-api-{{ region }}/lorem-list-api-{{ region }}.network
        state: absent

    - name: Push network quadlet lorem-list-api-{{ region }}
      ansible.builtin.copy:
        content: "[Network]"
        dest: ~/.config/containers/systemd/lorem-list-api-{{ region }}/lorem-list-api-{{ region }}.network
        mode: "0644"
        force: false

    # -----------------------------------------
    # configure lorem-list-postgresql container
    # -----------------------------------------

    - name: Define region specific variables - dev - lorem-list-postgresql
      ansible.builtin.set_fact:
        published_ports_postgresql: "{{ dev_published_ports_postgresql }}"
      when:
        - deploy_postgresql_container
        - region == "dev"
        - published_ports_postgresql is not defined
        - (dev_published_ports_postgresql is defined) and (dev_published_ports_postgresql == None or dev_published_ports_postgresql | length > 0)

    - name: Define region specific variables - prd - lorem-list-postgresql
      ansible.builtin.set_fact:
        published_ports_postgresql: "{{ prd_published_ports_postgresql }}"
      when:
        - deploy_postgresql_container
        - region == "prd"
        - (published_ports_postgresql is not defined)
        - (prd_published_ports_postgresql is defined) and (prd_published_ports_postgresql == None or prd_published_ports_postgresql | length > 0)

    - name: Ensure published_ports_postgresql is defined and not empty
      ansible.builtin.fail:
        msg: published_ports_postgresql is not defined or empty
      when:
        - deploy_postgresql_container
        - (published_ports_postgresql is not defined) or (published_ports_postgresql == None) or (published_ports_postgresql | length == 0)

    - name: deploy a quadlet .container file lorem-list-api-postgresql-{{ region }}
      containers.podman.podman_container:
        name: lorem-list-api-postgresql-{{ region }}
        image: docker.io/postgres:17-alpine
        log_driver: journald
        network:
          - lorem-list-api-{{ region }}.network
        ports: "{{ published_ports_postgresql }}"
        env:
          POSTGRES_USER: lorem-list-api
          POSTGRES_PASSWORD: lorem-list-api
          POSTGRES_DB: lorem-list
        state: quadlet
        quadlet_dir: ~/.config/containers/systemd/lorem-list-api-{{ region }}/
        quadlet_filename: lorem-list-api-postgresql-{{ region }}
        quadlet_file_mode: '0644'
        quadlet_options:
          - |+
            
            [Unit]
            Description=lorem-list-api-postgresql-{{ region }}
            StartLimitBurst=5
            StartLimitIntervalSec=150
            
            [Service]
            Restart=on-failure
            RestartSec=30
            
            [Install]
            WantedBy=default.target   
      when:
        - deploy_postgresql_container

    # -----------------------------------------
    # configure lorem-list-api container
    # -----------------------------------------

    - name: Define region specific variables - dev - lorem-list-api
      ansible.builtin.set_fact:
        published_ports_api: "{{ dev_published_ports_api }}"
        region_configured: true
      when:
        - region == "dev"
        - published_ports_api is not defined
        - (dev_published_ports_api is defined) and (dev_published_ports_api | length > 0)

    - name: Define region specific variables - prd - lorem-list-api
      ansible.builtin.set_fact:
        published_ports_api: "{{ prd_published_ports_api }}"
      when:
        - region == "prd"
        - (published_ports_api is not defined)
        - (prd_published_ports_api is defined) and (prd_published_ports_api == None or prd_published_ports_api | length > 0)

    - name: Ensure published_ports_api is defined and not empty
      ansible.builtin.fail:
        msg: published_ports_api is not defined or empty
      when:
        - (published_ports_api is not defined) or (published_ports_api == None) or (published_ports_api | length == 0)

    - name: Define datasource connection for managed postgresql container
      ansible.builtin.set_fact:
        datasource_url: jdbc:postgresql://lorem-list-api-postgresql-{{ region }}:5432/lorem-list
        quadlet_lorem_list_api_unit_requires: lorem-list-api-postgresql-{{ region }}.service
      when:
        - deploy_postgresql_container

    - name: Define datasource connection for unmanaged postgresql server - dev
      ansible.builtin.set_fact:
        datasource_url: "{{ dev_datasource_connection_url }}"
      when:
        - not deploy_postgresql_container
        - region == "dev"

    - name: Define datasource connection for unmanaged postgresql server - prd
      ansible.builtin.set_fact:
        datasource_url: "{{ prd_datasource_connection_url }}"
      when:
        - not deploy_postgresql_container
        - region == "prd"

    - name: Ensure datasource_url is defined and not empty
      ansible.builtin.fail:
        msg: datasource_url is not defined or empty
      when:
        - (datasource_url is not defined) or (datasource_url == None) or (datasource_url | length == 0)

    - name: deploy a quadlet .container file
      containers.podman.podman_container:
        name: lorem-list-api-{{ region }}
        image: "{{ registry_url }}/lorem-list-api:{{ tag }}"
        log_driver: journald
        network:
          - lorem-list-api-{{ region }}.network
        ports: "{{ published_ports_api }}"
        env:
          JDK_JAVA_OPTIONS: -Djava.security.egd=file:/dev/./urandom -Duser.timezone="UTC"
          SPRING_PROFILES_ACTIVE: postgresql
          SPRING_JPA_SHOW_SQL: false
          SPRING_DATASOURCE_URL: "{{ datasource_url }}"
          SPRING_DATASOURCE_USERNAME: lorem-list-api
          SPRING_DATASOURCE_PASSWORD: lorem-list-api
          SPRING_DATASOURCE_PLATFORM: POSTGRESQL
        state: quadlet
        requires: "{{ quadlet_lorem_list_api_unit_requires | default('') | list }}"
        quadlet_dir: ~/.config/containers/systemd/lorem-list-api-{{ region }}/
        quadlet_filename: lorem-list-api-{{ region }}.container
        quadlet_file_mode: '0644'
        quadlet_options:
          - |+
            
            [Unit]
            Description=lorem-list-api-{{ region }}
            StartLimitBurst=5
            StartLimitIntervalSec=175
            
            [Service]
            Restart=on-failure
            RestartSec=35
            
            [Install]
            WantedBy=default.target          

    # -----------------------------------------
    # start lorem-list containers
    # -----------------------------------------

    - name: Re-read systemd configuration
      ansible.builtin.systemd:
        daemon_reload: true
        scope: user

    - name: Start lorem-list-api-{{ region }}-network
      ansible.builtin.systemd:
        name: lorem-list-api-{{ region }}-network
        state: restarted
        scope: user

    - name: Start lorem-list-api-postgresql-{{ region }}
      ansible.builtin.systemd:
        name: lorem-list-api-postgresql-{{ region }}
        state: started
        scope: user
      when:
        - deploy_postgresql_container

    - name: Pull image lorem-list-api:{{ tag }}
      containers.podman.podman_image:
        name: registry.flyingfishflash.net/lorem-list/lorem-list-api
        force: true
        tag: "{{ tag }}"

    - name: Start lorem-list-api-{{ region }}
      ansible.builtin.systemd:
        name: lorem-list-api-{{ region }}
        state: started
        scope: user
